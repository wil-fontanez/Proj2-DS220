import csv
import redis

usVideoIDList = []
caVideoIDList = []
deVideoIDList = []
frVideoIDList = []
gbVideoIDList = []
inVideoIDList = []
# create redis db
r = redis.Redis(host='localhost', port=6379, db=0)
# stores data from USvideos.csv
with open('USvideos.csv', encoding='utf-8') as usData:
    readCSV = csv.reader(usData, delimiter=',')
    for row in readCSV:
        videoID = row[0]
        usVideoIDList.append(videoID)

        trendingDate = row[1]
        titleName = row[2]
        channelTitle = row[3]
        categoryID = row[4]
        publishTime = row[5]
        tag = row[6]
        view = row[7]
        like = row[8]
        dislike = row[9]
        commentCount = row[10]
        thumbnailLink = row[11]
        commentsDisabled = row[12]
        ratingsDisabled = row[13]
        videoErrorOrRemoved = row[14]
        description = row[15]
        video = dict(Trending_Date=str(trendingDate), Title=str(titleName), channeltitle=str(channelTitle),
                     categoryid=str(categoryID),
                     publishtime=str(publishTime), Tag=str(tag), viewCount=str(view), likeCount=str(like),
                     dislikecount=str(dislike),
                     comments=str(commentCount), thumbnaillink=str(thumbnailLink),
                     commentDisabled=str(commentsDisabled),
                     ratingdisabled=str(ratingsDisabled), viderrororremoved=str(videoErrorOrRemoved),
                     Description=str(description))
        r.hmset(videoID, video)

# stores data from CAvideos.csv
with open('CAvideos.csv', encoding='utf-8') as caData:
    readCSV = csv.reader(caData, delimiter=',')
    for row in readCSV:
        videoID = row[0]
        caVideoIDList.append(videoID)
        trendingDate = row[1]
        titleName = row[2]
        channelTitle = row[3]
        categoryID = row[4]
        publishTime = row[5]
        tag = row[6]
        view = row[7]
        like = row[8]
        dislike = row[9]
        commentCount = row[10]
        thumbnailLink = row[11]
        commentsDisabled = row[12]
        ratingsDisabled = row[13]
        videoErrorOrRemoved = row[14]
        description = row[15]
        video = dict(Trending_Date=str(trendingDate), Title=str(titleName), channeltitle=str(channelTitle),
                     categoryid=str(categoryID),
                     publishtime=str(publishTime), Tag=str(tag), viewCount=str(view), likeCount=str(like),
                     dislikecount=str(dislike),
                     comments=str(commentCount), thumbnaillink=str(thumbnailLink),
                     commentDisabled=str(commentsDisabled),
                     ratingdisabled=str(ratingsDisabled), viderrororremoved=str(videoErrorOrRemoved),
                     Description=str(description))
        r.hmset(videoID, video)
# stores data from DEvideos
with open('DEvideos.csv', encoding='utf-8') as deData:
    readCSV = csv.reader(deData, delimiter=',')
    for row in readCSV:
        videoID = row[0]
        deVideoIDList.append(videoID)
        trendingDate = row[1]
        titleName = row[2]
        channelTitle = row[3]
        categoryID = row[4]
        publishTime = row[5]
        tag = row[6]
        view = row[7]
        like = row[8]
        dislike = row[9]
        commentCount = row[10]
        thumbnailLink = row[11]
        commentsDisabled = row[12]
        ratingsDisabled = row[13]
        videoErrorOrRemoved = row[14]
        description = row[15]
        video = dict(Trending_Date=str(trendingDate), Title=str(titleName), channeltitle=str(channelTitle),
                     categoryid=str(categoryID),
                     publishtime=str(publishTime), Tag=str(tag), viewCount=str(view), likeCount=str(like),
                     dislikecount=str(dislike),
                     comments=str(commentCount), thumbnaillink=str(thumbnailLink),
                     commentDisabled=str(commentsDisabled),
                     ratingdisabled=str(ratingsDisabled), viderrororremoved=str(videoErrorOrRemoved),
                     Description=str(description))
        r.hmset(videoID, video)
# stores data from FRvideos
with open('FRvideos.csv', encoding='utf-8') as frData:
    readCSV = csv.reader(frData, delimiter=',')
    for row in readCSV:
        videoID = row[0]
        frVideoIDList.append(videoID)
        trendingDate = row[1]
        titleName = row[2]
        channelTitle = row[3]
        categoryID = row[4]
        publishTime = row[5]
        tag = row[6]
        view = row[7]
        like = row[8]
        dislike = row[9]
        commentCount = row[10]
        thumbnailLink = row[11]
        commentsDisabled = row[12]
        ratingsDisabled = row[13]
        videoErrorOrRemoved = row[14]
        description = row[15]
        video = dict(Trending_Date=str(trendingDate), Title=str(titleName), channeltitle=str(channelTitle),
                     categoryid=str(categoryID),
                     publishtime=str(publishTime), Tag=str(tag), viewCount=str(view), likeCount=str(like),
                     dislikecount=str(dislike),
                     comments=str(commentCount), thumbnaillink=str(thumbnailLink),
                     commentDisabled=str(commentsDisabled),
                     ratingdisabled=str(ratingsDisabled), viderrororremoved=str(videoErrorOrRemoved),
                     Description=str(description))
        r.hmset(videoID, video)
with open('GBvideos.csv', encoding='utf-8') as gbData:
    readCSV = csv.reader(gbData, delimiter=',')
    for row in readCSV:
        videoID = row[0]
        gbVideoIDList.append(videoID)
        trendingDate = row[1]
        titleName = row[2]
        channelTitle = row[3]
        categoryID = row[4]
        publishTime = row[5]
        tag = row[6]
        view = row[7]
        like = row[8]
        dislike = row[9]
        commentCount = row[10]
        thumbnailLink = row[11]
        commentsDisabled = row[12]
        ratingsDisabled = row[13]
        videoErrorOrRemoved = row[14]
        description = row[15]
        video = dict(Trending_Date=str(trendingDate), Title=str(titleName), channeltitle=str(channelTitle),
                     categoryid=str(categoryID),
                     publishtime=str(publishTime), Tag=str(tag), viewCount=str(view), likeCount=str(like),
                     dislikecount=str(dislike),
                     comments=str(commentCount), thumbnaillink=str(thumbnailLink),
                     commentDisabled=str(commentsDisabled),
                     ratingdisabled=str(ratingsDisabled), viderrororremoved=str(videoErrorOrRemoved),
                     Description=str(description))
        r.hmset(videoID, video)
# stores data from INvideos
with open('INvideos.csv', encoding='utf-8') as inData:
    readCSV = csv.reader(inData, delimiter=',')
    for row in readCSV:
        videoID = row[0]
        inVideoIDList.append(videoID)
        trendingDate = row[1]
        titleName = row[2]
        channelTitle = row[3]
        categoryID = row[4]
        publishTime = row[5]
        tag = row[6]
        view = row[7]
        like = row[8]
        dislike = row[9]
        commentCount = row[10]
        thumbnailLink = row[11]
        commentsDisabled = row[12]
        ratingsDisabled = row[13]
        videoErrorOrRemoved = row[14]
        description = row[15]

        video = dict(Trending_Date=str(trendingDate), Title=str(titleName), channeltitle=str(channelTitle),
                     categoryid=str(categoryID),
                     publishtime=str(publishTime), Tag=str(tag), viewCount=str(view), likeCount=str(like),
                     dislikecount=str(dislike),
                     comments=str(commentCount), thumbnaillink=str(thumbnailLink),
                     commentDisabled=str(commentsDisabled),
                     ratingdisabled=str(ratingsDisabled), viderrororremoved=str(videoErrorOrRemoved),
                     Description=str(description))
        r.hmset(videoID, video)

# Displays all data by iterating through lists of videoID's separated by country

videoKey = ""
ustitleList = []
uschannelTitleList = []
uscategoryIDList = []
uspublishTimeList = []
usviewCountList = []
uslikeCountList = []
usdislikeCountList = []
uscommentsList = []
usthumbnailLinkList = []
uscommentDisabledList = []
usratingDisabledList = []
usvideoErrororRemovedList = []
catitleList = []
cachannelTitleList = []
cacategoryIDList = []
capublishTimeList = []
caviewCountList = []
calikeCountList = []
cadislikeCountList = []
cacommentsList = []
cathumbnailLinkList = []
cacommentDisabledList = []
caratingDisabledList = []
cavideoErrororRemovedList = []
gbtrendingDateList = []
gbtitleList = []
gbchannelTitleList = []
gbcategoryIDList = []
gbpublishTimeList = []
gbtagList = []
gbviewCountList = []
gblikeCountList = []
gbdislikeCountList = []
gbcommentsList = []
gbcommentDisabledList =[]
gbratingDisabledList= []
gbvideoErrororRemovedList= []
frtrendingDateList = []
frtitleList = []
frchannelTitleList = []
frcategoryIDList = []
frpublishTimeList = []
frtagList =[]
frviewCountList = []
frlikeCountList = []
frdislikeCountList = []
frcommentsList = []
frcommentDisabledList = []
frratingDisabledList = []
frvideoErrororRemovedList = []
detrendingDateList = []
detitleList =[]
dechannelTitleList = []
decategoryIDList = []
depublishTimeList = []
detagList = []
deviewCountList = []
delikeCountList = []
dedislikeCountList = []
decommentsList = []
decommentDisabledList = []
deratingDisabledList = []
devideoErrororRemovedList = []
intrendingDateList = []
intitleList = []
inchannelTitleList = []
incategoryIDList = []
inpublishTimeList =[]
intagList = []
inviewCountList = []
inlikeCountList =[]
indislikeCountList = []
incommentsList =[]
incommentDisabledList = []
inratingDisabledList = []
invideoErrororRemovedList = []
for values in usVideoIDList[1:]:
    videoKey = values
    ustitleList.append(r.hget(values, "Title"))
    uschannelTitleList.append(r.hget(values, "channeltitle"))
    uscategoryIDList.append(r.hget(values, "categoryid"))
    uspublishTimeList.append(r.hget(values, "publishtime"))
    usviewCountList.append(r.hget(values, "viewCount"))
    uslikeCountList.append(r.hget(values, "likeCount"))
    usdislikeCountList.append(r.hget(values, "dislikecount"))
    uscommentsList.append(r.hget(values, "comments"))
    uscommentDisabledList.append(r.hget(values, "commentDisabled"))
    usratingDisabledList.append(r.hget(values, "ratingdisabled"))
    usvideoErrororRemovedList.append(r.hget(values, "viderrororremoved"))
input()  # separates each set by country for easy testing
for values in caVideoIDList[1:]:
    videoKey = values
    catitleList.append(r.hget(values, "Title"))
    cachannelTitleList.append(r.hget(values, "channeltitle"))
    cacategoryIDList.append(r.hget(values, "categoryid"))
    capublishTimeList.append(r.hget(values, "publishtime"))
    caviewCountList.append(r.hget(values, "viewCount"))
    calikeCountList.append(r.hget(values, "likeCount"))
    cadislikeCountList.append(r.hget(values, "dislikecount"))
    cacommentsList.append(r.hget(values, "comments"))
    cacommentDisabledList.append(r.hget(values, "commentDisabled"))
    caratingDisabledList.append(r.hget(values, "ratingdisabled"))
    cavideoErrororRemovedList.append(r.hget(values, "viderrororremoved"))
input()
for values in deVideoIDList[1:]:
    videoKey = values
    detrendingDateList.append(r.hget(values, "Trending_Date"))
    detitleList.append(r.hget(values, "Title"))
    dechannelTitleList.append(r.hget(values, "channeltitle"))
    decategoryIDList.append(r.hget(values, "categoryid"))
    depublishTimeList.append(r.hget(values, "publishtime"))
    detagList.append(r.hget(values, "Tag"))
    deviewCountList.append(r.hget(values, "viewCount"))
    delikeCountList.append(r.hget(values, "likeCount"))
    dedislikeCountList.append(r.hget(values, "dislikecount"))
    decommentsList.append(r.hget(values, "comments"))
    decommentDisabledList.append(r.hget(values, "commentDisabled"))
    deratingDisabledList.append(r.hget(values, "ratingdisabled"))
    devideoErrororRemovedList.append(r.hget(values, "viderrororremoved"))
input()
for values in frVideoIDList[1:]:
    videoKey = values
    frtrendingDateList.append(r.hget(values, "Trending_Date"))
    frtitleList.append(r.hget(values, "Title"))
    frchannelTitleList.append(r.hget(values, "channeltitle"))
    frcategoryIDList.append(r.hget(values, "categoryid"))
    frpublishTimeList.append(r.hget(values, "publishtime"))
    frtagList.append(r.hget(values, "Tag"))
    frviewCountList.append(r.hget(values, "viewCount"))
    frlikeCountList.append(r.hget(values, "likeCount"))
    frdislikeCountList.append(r.hget(values, "dislikecount"))
    frcommentsList.append(r.hget(values, "comments"))
    frcommentDisabledList.append(r.hget(values, "commentDisabled"))
    frratingDisabledList.append(r.hget(values, "ratingdisabled"))
    frvideoErrororRemovedList.append(r.hget(values, "viderrororremoved"))
input()
for values in gbVideoIDList[1:]:
    videoKey = values
    gbtrendingDateList.append(r.hget(values, "Trending_Date"))
    gbtitleList.append(r.hget(values, "Title"))
    gbchannelTitleList.append(r.hget(values, "channeltitle"))
    gbcategoryIDList.append(r.hget(values, "categoryid"))
    gbpublishTimeList.append(r.hget(values, "publishtime"))
    gbtagList.append(r.hget(values, "Tag"))
    gbviewCountList.append(r.hget(values, "viewCount"))
    gblikeCountList.append(r.hget(values, "likeCount"))
    gbdislikeCountList.append(r.hget(values, "dislikecount"))
    gbcommentsList.append(r.hget(values, "comments"))
    gbcommentDisabledList.append(r.hget(values, "commentDisabled"))
    gbratingDisabledList.append(r.hget(values, "ratingdisabled"))
    gbvideoErrororRemovedList.append(r.hget(values, "viderrororremoved"))
input()
for values in inVideoIDList[1:]:
    videoKey = values
    intrendingDateList.append(r.hget(values, "Trending_Date"))
    intitleList.append(r.hget(values, "Title"))
    inchannelTitleList.append(r.hget(values, "channeltitle"))
    incategoryIDList.append(r.hget(values, "categoryid"))
    inpublishTimeList.append(r.hget(values, "publishtime"))
    intagList.append(r.hget(values, "Tag"))
    inviewCountList.append(r.hget(values, "viewCount"))
    inlikeCountList.append(r.hget(values, "likeCount"))
    indislikeCountList.append(r.hget(values, "dislikecount"))
    incommentsList.append(r.hget(values, "comments"))
    incommentDisabledList.append(r.hget(values, "commentDisabled"))
    inratingDisabledList.append(r.hget(values, "ratingdisabled"))
    invideoErrororRemovedList.append(r.hget(values, "viderrororremoved"))
